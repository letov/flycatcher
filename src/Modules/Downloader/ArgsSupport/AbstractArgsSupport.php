<?php
// autogenerated file
// DO NOT EDIT
namespace Letov\Flycatcher\Modules\Downloader\ArgsSupport;

abstract class AbstractArgsSupport implements ArgInterfaces\CookieArgInterface, ArgInterfaces\HeadersArgInterface, ArgInterfaces\HttpMethodArgInterface, ArgInterfaces\PayloadFormArgInterface, ArgInterfaces\PayloadRawArgInterface, ArgInterfaces\PhantomJSClientArgInterface, ArgInterfaces\PhantomJSPathArgInterface, ArgInterfaces\ProxyArgInterface, ArgInterfaces\ShellCmdArgInterface, ArgInterfaces\TimeOutArgInterface
{
	protected array $argsStorage;


	public function __construct(array $args)
	{
		$this->argsStorage = $args;
		$this->setArgsToClient();
	}


	public function updateArg(array $args)
	{
		$this->argsStorage = array_merge($this->argsStorage, $args);
		$this->setArgsToClient();
	}


	abstract protected function setArgsToClient();


	protected function getArg(string $methodName)
	{
		$argName = substr($methodName, 3);
		return $this->argsStorage[$argName] ?? null;
	}


	public function getCookieFilePath(): ?string
	{
		return $this->getArg(__FUNCTION__);
	}


	public function getHeaders(): ?array
	{
		return $this->getArg(__FUNCTION__);
	}


	public function getHttpMethod(): ?string
	{
		return $this->getArg(__FUNCTION__);
	}


	public function getPayloadForm(): ?array
	{
		return $this->getArg(__FUNCTION__);
	}


	public function getPayloadRaw(): ?string
	{
		return $this->getArg(__FUNCTION__);
	}


	public function getPhantomJSClient(): ?\JonnyW\PhantomJs\ClientInterface
	{
		return $this->getArg(__FUNCTION__);
	}


	public function getPhantomJSPath(): ?string
	{
		return $this->getArg(__FUNCTION__);
	}


	public function getProxy(): ?\Letov\Flycatcher\Modules\Proxy\ProxyInterface
	{
		return $this->getArg(__FUNCTION__);
	}


	public function getShellCmd(): ?\Letov\Flycatcher\Modules\ShellCmd\ShellCmdInterface
	{
		return $this->getArg(__FUNCTION__);
	}


	public function getTimeOut(): ?int
	{
		return $this->getArg(__FUNCTION__);
	}
}
