<?php
// autogenerated file
// DO NOT EDIT
namespace Letov\Flycatcher\Modules\Downloader\ArgsSupport;

abstract class AbstractArgsSupport implements ArgInterfaces\CookieArgInterface, ArgInterfaces\HeadersArgInterface, ArgInterfaces\HttpMethodArgInterface, ArgInterfaces\PayloadArgInterface, ArgInterfaces\PhantomJSCaptchaApiKeyInterface, ArgInterfaces\PhantomJSCaptchaSignInterface, ArgInterfaces\PhantomJSConnectorInterface, ArgInterfaces\PhantomJSMaxExecTimeInterface, ArgInterfaces\ProxyArgInterface, ArgInterfaces\TimeOutArgInterface
{
	protected array $argsStorage;


	protected function setArgs(array $args)
	{
		$this->argsStorage = $args;
	}


	protected function getArg(string $methodName)
	{
		$argName = substr($methodName, 3);
		return $this->argsStorage[$argName] ?? null;
	}


	public function getCookieFilePath(): ?string
	{
		return $this->getArg(__FUNCTION__);
	}


	public function getHeaders(): ?array
	{
		return $this->getArg(__FUNCTION__);
	}


	public function getHttpMethod(): ?string
	{
		return $this->getArg(__FUNCTION__);
	}


	public function getPayload(): ?string
	{
		return $this->getArg(__FUNCTION__);
	}


	public function getPhantomJSCaptchaApiKey(): ?string
	{
		return $this->getArg(__FUNCTION__);
	}


	public function getPhantomJSCaptchaSign(): ?string
	{
		return $this->getArg(__FUNCTION__);
	}


	public function getPhantomJSConnector(): ?string
	{
		return $this->getArg(__FUNCTION__);
	}


	public function getPhantomJSMaxExecTime(): ?int
	{
		return $this->getArg(__FUNCTION__);
	}


	public function getProxy(): ?\Letov\Flycatcher\Modules\Proxy\ProxyInterface
	{
		return $this->getArg(__FUNCTION__);
	}


	public function getTimeOut(): ?int
	{
		return $this->getArg(__FUNCTION__);
	}
}
